"use strict";Object.defineProperties(exports,{__esModule:{value:!0},[Symbol.toStringTag]:{value:"Module"}});function h(e){const n=parseFloat(e);return typeof n=="number"&&!Number.isNaN(n)}function m(e,n,t){return Math.min(Math.max(e,n),t)}function O(e,n,t){return n+(t-n)*e}function b(e,n){return Math.round(e*10**n)/10**n}function d(e){const n=parseFloat(e);return e.toString().replace(n.toString(),"")}function $(e){return function(n,t,r){return n.map(i=>e(i,t,r))}}const p=(e,[n=1,t=100,r=10,i=0]=[],s)=>{if(e===0||e===1)return e;n=m(n,.1,1e3),t=m(t,.1,1e3),r=m(r,.1,1e3),i=m(i,.1,1e3);const a=Math.sqrt(t/n),o=r/(2*Math.sqrt(t*n)),g=o<1?a*Math.sqrt(1-o*o):0,u=1,l=o<1?(o*a+-i)/g:-i+a;let c=s?s*e/1e3:e;return o<1?c=Math.exp(-c*o*a)*(u*Math.cos(g*c)+l*Math.sin(g*c)):c=(u+l*c)*Math.exp(-c*a),1-c},F=new Map,I=1e5;function M([e,n,t,r]=[]){let i=[e,n,t,r],s=`${i}`;if(F.has(s))return F.get(s);const a=1/6;let o=0,g=0,u=0;for(;++u<I;)if(o+=a,p(o,i,null)===1){if(g++,g>=16)break}else g=0;const l=o*a*1e3;return F.set(s,l),l}function N(e){return(n,t=[],r)=>1-e(1-n,t,r)}function w(e){return function(n,t=[],r){return n<.5?e(n*2,t,r)/2:1-e(n*-2+2,t,r)/2}}function k(e){return function(n,t=[],r){return n<.5?(1-e(1-n*2,t,r))/2:(e(n*2-1,t,r)+1)/2}}const x=p,L=N(p),P=w(p),T=k(p);function E(e,n,t=3){const r=n.length-1,i=m(Math.floor(e*r),0,r-1),s=n[i],a=n[i+1],o=(e-i/r)*r;return b(O(o,s,a),t)}function y(e,n){const t=n.length-1;e=m(e,0,1);const r=Math.round(e*t);return n[r]}const D=y;function j(e,n,t=3){let r="";return h(n[0])&&(r=d(n[0])),E(e,n.map(i=>typeof i=="number"?i:parseFloat(i)),t)+r}function A(e,n,t=3){return n.every(s=>typeof s=="number")?E(e,n,t):n.every(s=>h(s))?j(e,n,t):y(e,n)}exports.EasingFunctions={spring:p,"spring-in":x,"spring-out":L,"spring-in-out":P,"spring-out-in":T};exports.EasingFunctionKeys=Object.keys(exports.EasingFunctions);function U(e,n){exports.EasingFunctions={...exports.EasingFunctions,[e]:n},exports.EasingFunctionKeys=Object.keys(exports.EasingFunctions)}function K(e){exports.EasingFunctions={...exports.EasingFunctions,...e},exports.EasingFunctionKeys=Object.keys(exports.EasingFunctions)}function C(e){const n=/(\(|\s)([^)]+)\)?/.exec(e.toString());return n?n[2].split(",").map(t=>{let r=parseFloat(t);return Number.isNaN(r)?t.trim():r}):[]}function S(e={}){const n=typeof e=="string"||Array.isArray(e)&&typeof e[0]=="function";let{easing:t=[p,1,100,10,0],numPoints:r=100,decimal:i=3}=n?{easing:e}:e;if(typeof t=="string"){const s=exports.EasingFunctions[t.replace(/(\(|\s).+/,"").toLowerCase().trim()],a=C(t);t=[s,...a]}return{easing:t,numPoints:r,decimal:i}}const f=new Map;function q(e={}){let{easing:n,numPoints:t}=S(e);if(Array.isArray(n)){if(typeof n[0]!="function")throw new Error("[spring-easing] A frame function is required as the first element in the easing array, e.g. [SpringFrame, ...]");n.length>1&&n.length<5&&console.warn(`[spring-easing] Be careful of only setting some of the spring parameters, you've only set ${5-n.length} spring parameter(s). The easing works best in the format: 
* "spring-out(mass, stiffness, damping, velocity)" or 
* [SpringOutFrame, mass, stiffness, damping, velocity].`),n.length>5&&console.warn(`[spring-easing] You entered ${5-n.length} more spring parameter(s) than necessary. The easing needs to be in the format: 
* "spring-out(mass, stiffness, damping, velocity)" or 
* [SpringOutFrame, mass, stiffness, damping, velocity].`)}else throw new Error(`[spring-easing] The easing needs to be in the format:  
* "spring-out(mass, stiffness, damping, velocity)" or 
* [SpringOutFrame, mass, stiffness, damping, velocity], the easing recieved is "${n}", [spring-easing] doesn't really know what to do with that.`);let[r,...i]=n;const s=`${i},${t}`;if(f.has(s)){let u=f.get(s);if(u.has(r))return u.get(r)}const a=[],o=M(i);for(let u=0;u<t;u++)a[u]=r(u/(t-1),i,o);const g=f.has(s)?f.get(s):new WeakMap;return g.set(r,[a,o]),f.set(s,g),[a,o]}function _(e,n={},t=A){const r=S(n),[i,s]=q(r);return[i.map(a=>t(a,e,r.decimal)),s]}exports.EaseInOut=w;exports.EaseOut=N;exports.EaseOutIn=k;exports.EasingDurationCache=F;exports.EasingOptions=S;exports.FramePtsCache=f;exports.GenerateSpringFrames=q;exports.INFINITE_LOOP_LIMIT=I;exports.SpringEasing=_;exports.SpringFrame=p;exports.SpringInFrame=x;exports.SpringInOutFrame=P;exports.SpringOutFrame=L;exports.SpringOutInFrame=T;exports.default=_;exports.getSpringDuration=M;exports.getUnit=d;exports.interpolateComplex=A;exports.interpolateNumber=E;exports.interpolateSequence=y;exports.interpolateString=j;exports.interpolateUsingIndex=D;exports.isNumberLike=h;exports.limit=m;exports.parseEasingParameters=C;exports.registerEasingFunction=U;exports.registerEasingFunctions=K;exports.scale=O;exports.toAnimationFrames=$;exports.toFixed=b;
