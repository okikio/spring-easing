(function(t,l){typeof exports=="object"&&typeof module<"u"?l(exports):typeof define=="function"&&define.amd?define(["exports"],l):(t=typeof globalThis<"u"?globalThis:t||self,l(t.SpringEasing={}))})(this,function(t){"use strict";function l(e){let n=parseFloat(e);return typeof n=="number"&&!Number.isNaN(n)}function p(e,n,i){return Math.min(Math.max(e,n),i)}function O(e,n,i){return n+(i-n)*e}function S(e,n){return Math.round(e*10**n)/10**n}function b(e){const n=parseFloat(e);return e.toString().replace(n.toString(),"")}function U(e){return function(n,i,r){return n.map(s=>e(s,i,r))}}const m=(e,[n=1,i=100,r=10,s=0]=[],a)=>{if(e===0||e===1)return e;n=p(n,.1,1e3),i=p(i,.1,1e3),r=p(r,.1,1e3),s=p(s,.1,1e3);const u=Math.sqrt(i/n),o=r/(2*Math.sqrt(i*n)),g=o<1?u*Math.sqrt(1-o*o):0,c=1,F=o<1?(o*u+-s)/g:-s+u;let f=a?a*e/1e3:e;return o<1?f=Math.exp(-f*o*u)*(c*Math.cos(g*f)+F*Math.sin(g*f)):f=(c+F*f)*Math.exp(-f*u),1-f},E=new Map,I=1e5;function M([e,n,i,r]=[]){let s=[e,n,i,r],a=`${s}`;if(E.has(a))return E.get(a);const u=1/6;let o=0,g=0,c=0;for(;++c<I;)if(o+=u,m(o,s,null)===1){if(g++,g>=16)break}else g=0;const F=o*u*1e3;return E.set(a,F),F}function N(e){return(n,i=[],r)=>1-e(1-n,i,r)}function w(e){return function(n,i=[],r){return n<.5?e(n*2,i,r)/2:1-e(n*-2+2,i,r)/2}}function k(e){return function(n,i=[],r){return n<.5?(1-e(1-n*2,i,r))/2:(e(n*2-1,i,r)+1)/2}}const T=m,L=N(m),P=w(m),j=k(m);function d(e,n,i=3){const r=n.length-1;return e.map(s=>{const a=p(Math.floor(s*r),0,r-1),u=n[a],o=n[a+1],g=(s-a/r)*r;return S(O(g,u,o),i)})}function A(e,n){const i=n.length-1;return e.map(r=>{r=p(r,0,1);const s=Math.round(r*i);return n[s]})}function C(e,n,i=3){let r="";return l(n[0])&&(r=b(n[0])),d(e,n.map(s=>typeof s=="number"?s:parseFloat(s)),i).map(s=>s+r)}function _(e,n,i=3){return n.every(a=>typeof a=="number")?d(e,n,i):n.every(a=>l(a))?C(e,n,i):A(e,n)}t.EasingFunctions={spring:m,"spring-in":T,"spring-out":L,"spring-in-out":P,"spring-out-in":j},t.EasingFunctionKeys=Object.keys(t.EasingFunctions);function K(e,n){t.EasingFunctions={...t.EasingFunctions,[e]:n},t.EasingFunctionKeys=Object.keys(t.EasingFunctions)}function G(e){t.EasingFunctions={...t.EasingFunctions,...e},t.EasingFunctionKeys=Object.keys(t.EasingFunctions)}function $(e){const n=/(\(|\s)([^)]+)\)?/.exec(e.toString());return n?n[2].split(",").map(i=>{let r=parseFloat(i);return Number.isNaN(r)?i.trim():r}):[]}function y(e={}){const n=typeof e=="string"||Array.isArray(e)&&typeof e[0]=="function";let{easing:i=[m,1,100,10,0],numPoints:r=100,decimal:s=3}=n?{easing:e}:e;if(typeof i=="string"){const a=t.EasingFunctions[i.replace(/(\(|\s).+/,"").toLowerCase().trim()],u=$(i);i=[a,...u]}return{easing:i,numPoints:r,decimal:s}}const h=new Map;function q(e={}){let{easing:n,numPoints:i}=y(e);if(Array.isArray(n)){if(typeof n[0]!="function")throw new Error("[spring-easing] A frame function is required as the first element in the easing array, e.g. [SpringFrame, ...]");n.length>1&&n.length<5&&console.warn(`[spring-easing] Be careful of only setting some of the spring parameters, you've only set ${5-n.length} spring parameter(s). The easing works best in the format: 
* "spring-out(mass, stiffness, damping, velocity)" or 
* [SpringOutFrame, mass, stiffness, damping, velocity].`),n.length>5&&console.warn(`[spring-easing] You entered ${5-n.length} more spring parameter(s) than necessary. The easing needs to be in the format: 
* "spring-out(mass, stiffness, damping, velocity)" or 
* [SpringOutFrame, mass, stiffness, damping, velocity].`)}else throw new Error(`[spring-easing] The easing needs to be in the format:  
* "spring-out(mass, stiffness, damping, velocity)" or 
* [SpringOutFrame, mass, stiffness, damping, velocity], the easing recieved is "${n}", [spring-easing] doesn't really know what to do with that.`);let[r,...s]=n;const a=`${s},${i}`;if(h.has(a)){let c=h.get(a);if(c.has(r))return c.get(r)}const u=[],o=M(s);for(let c=0;c<i;c++)u[c]=r(c/(i-1),s,o);const g=h.has(a)?h.get(a):new WeakMap;return g.set(r,[u,o]),h.set(a,g),[u,o]}function D(e,n={},i=_){const r=y(n),[s,a]=q(r);return[i(s,e,r.decimal),a]}t.EaseInOut=w,t.EaseOut=N,t.EaseOutIn=k,t.EasingDurationCache=E,t.EasingOptions=y,t.FramePtsCache=h,t.GenerateSpringFrames=q,t.INFINITE_LOOP_LIMIT=I,t.SpringEasing=D,t.SpringFrame=m,t.SpringInFrame=T,t.SpringInOutFrame=P,t.SpringOutFrame=L,t.SpringOutInFrame=j,t.default=D,t.getSpringDuration=M,t.getUnit=b,t.interpolateComplex=_,t.interpolateNumber=d,t.interpolateString=C,t.interpolateUsingIndex=A,t.isNumberLike=l,t.limit=p,t.parseEasingParameters=$,t.registerEasingFunction=K,t.registerEasingFunctions=G,t.scale=O,t.toAnimationFrames=U,t.toFixed=S,Object.defineProperties(t,{__esModule:{value:!0},[Symbol.toStringTag]:{value:"Module"}})});
